services:
    redpanda:
        image: redpandadata/redpanda:latest
        container_name: redpanda
        ports:
        - "9092:9092" # Kafka API
        - "9644:9644" # Admin API
        - "8082:8082" # REST API
        command:
        - redpanda
        - start
        - --smp 1
        - --memory 1G
        - --reserve-memory 0M
        - --overprovisioned
        - --node-id 0
        - --check=false
        - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
        - --advertise-kafka-addr PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
        - --pandaproxy-addr 0.0.0.0:8082
        - --advertise-pandaproxy-addr localhost:8082
        - --rpc-addr 0.0.0.0:33145
        - --advertise-rpc-addr redpanda:33145
    redpanda-console:
        image: docker.redpanda.com/redpandadata/console:latest
        container_name: redpanda-console
        ports:
        - "8081:8080" # Redpanda Console Web UI
        environment:
        - SPRING_PROFILES_ACTIVE=docker
        - SPRING_KAFKA_BOOTSTRAP_SERVERS=redpanda:29092
        - SPRING_DATASOURCE_URL=jdbc:h2:mem:testdb
        - SPRING_DATASOURCE_USERNAME=sa
        - SPRING_DATASOURCE_PASSWORD=
        - SPRING_JPA_HIBERNATE_DDL_AUTO=update
        - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
        - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
        - MANAGEMENT_ENDPOINT_HEALTH_SHOW_COMPONENTS=always
        - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
        - MANAGEMENT_ENDPOINTS_WEB_BASE_PATH=/actuator
        depends_on:
        - redpanda

    event-order:
        image: ghcr.io/freesp1r1t91/order-service:latest
        container_name: event-order
        ports:
            - "8080:8080"
        depends_on:
            - redpanda
        environment:
        - SPRING_PROFILES_ACTIVE=docker
        - SPRING_KAFKA_BOOTSTRAP_SERVERS=redpanda:29092
        - SPRING_DATASOURCE_URL=jdbc:h2:mem:testdb
        - SPRING_DATASOURCE_USERNAME=sa
        - SPRING_DATASOURCE_PASSWORD=
        - SPRING_JPA_HIBERNATE_DDL_AUTO=update
        - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
        - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
        - MANAGEMENT_ENDPOINT_HEALTH_SHOW_COMPONENTS=always
        - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
        - MANAGEMENT_ENDPOINTS_WEB_BASE_PATH=/actuator

    event-delivery:
        image: ghcr.io/freesp1r1t91/event-service:latest   
        container_name: event-delivery     
        ports:
            - "8083:8080"
        depends_on:
            - redpanda
        environment:
            - SPRING_KAFKA_BOOTSTRAP_SERVERS=redpanda:29092

     # Prometheus
    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        ports:
            - "9090:9090"   # Prometheus Web UI
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=200h'
            - '--web.enable-lifecycle'
        depends_on:
            - event-order
            - event-delivery

 # Grafana
    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        ports:
            - "3000:3000"   # Grafana Web UI
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=admin
            - GF_USERS_ALLOW_SIGN_UP=false
        volumes:
            - grafana_data:/var/lib/grafana
            - ./grafana/provisioning:/etc/grafana/provisioning
        depends_on:
            - prometheus


volumes:
 prometheus_data:
 grafana_data: